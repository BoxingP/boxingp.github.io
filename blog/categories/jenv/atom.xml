<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Jenv | Rain-driven Development]]></title>
  <link href="http://boxingp.github.io/blog/categories/jenv/atom.xml" rel="self"/>
  <link href="http://boxingp.github.io/"/>
  <updated>2015-10-24T22:41:19+08:00</updated>
  <id>http://boxingp.github.io/</id>
  <author>
    <name><![CDATA[Boxing]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在OS X中使用jEnv管理多个Java版本]]></title>
    <link href="http://boxingp.github.io/blog/2015/01/25/manage-multiple-versions-of-java-on-os-x/"/>
    <updated>2015-01-25T23:16:17+08:00</updated>
    <id>http://boxingp.github.io/blog/2015/01/25/manage-multiple-versions-of-java-on-os-x</id>
    <content type="html"><![CDATA[<p>使用Java时会接触到不同的版本。大多数时候我在使用Java 8，但是因为某些框架或是工具的要求，这时不得不让Java 6上前线。一般情况下是配置JAVA_HOME，指定不同的Java版本，但是这需要人为手动的输入。如果又要选择其他版本，就需要对JAVA_HOME重新进行设置。这十分麻烦，所以在做这些操作时真是“会呼吸的痛”。终于，我发现了<a href="http://www.jenv.be/">jEnv</a>。</p>

<p>正如它的官网所宣称的那样，它是来让你忘记怎么配置JAVA_HOME环境变量的神队友。使用简单的命令就可以在不同的Java版本之间进行切换。如果你使用过rbenv，你会发现jEnv就如同<a href="https://github.com/sstephenson/rbenv">rbenv</a>的Java版一样。</p>

<!-- more -->


<p><strong>基本使用:</strong></p>

<p>在Mac OS X下使用<a href="http://brew.sh/">Homebrew</a>安装jEnv：</p>

<pre><code class="sh">$ brew install jenv
</code></pre>

<p>安装成功后需要进行一下简单的配置，让它可以起作用：</p>

<p>使用Bash的情况
<code>sh
$ echo 'export PATH="$HOME/.jenv/bin:$PATH"' &gt;&gt; ~/.bash_profile
$ echo 'eval "$(jenv init -)"' &gt;&gt; ~/.bash_profile
</code>
使用Zsh的情况
<code>sh
$ echo 'export PATH="$HOME/.jenv/bin:$PATH"' &gt;&gt; ~/.zshrc
$ echo 'eval "$(jenv init -)"' &gt;&gt; ~/.zshrc
</code></p>

<p>好了，jEnv已经安装好了，让我们来看一下它找见哪个Java版本了：
<code>sh
$ jenv versions
* system (set by /Users/bxpeng/.jenv/version)
</code>
它只找到了系统默认的Java，即使我已经下载了其他版本的Java。<code>*</code>表示当前选择的版本。</p>

<p>和rbenv不同的是，jEnv不能自己安装任何版本的Java，所以需要我们手动安装好之后再用jEnv指向它们。</p>

<p>安装Java 6，需要在<a href="http://support.apple.com/kb/DL1572">Apple</a>进行下载。它将安装到<code>/System/Library/Java/JavaVirtualMachines/</code>下；
安装Java 7，可以在<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html">Oracle</a>进行下载.它将安装到<code>/Library/Java/JavaVirtualMachines/</code>下；
安装Java 8，可以在<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">Oracle</a>进行下载.它将安装到<code>/Library/Java/JavaVirtualMachines/</code>下。</p>

<p>使用<code>jenv add</code>将Java 6加入jenv中：
<code>sh
$ jenv add /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/
1.6 added
1.6.0.65 added
oracle64-1.6.0.65 added
</code>
运行<code>jenv versions</code>时会显示：
<code>sh
$ jenv versions
* system (set by /Users/bxpeng/.jenv/version)
  1.6
  1.6.0.65
  oracle64-1.6.0.65
</code>
同样的，使用<code>jenv add</code>将Java 7加入jenv中：
<code>sh
$ jenv add /Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home/
1.7 added
1.7.0.71 added
oracle64-1.7.0.71 added
</code>
<code>sh
$ jenv add /Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/
1.8 added
1.8.0.25 added
oracle64-1.8.0.25 added
</code>
现在运行<code>jenv versions</code>会显示：
<code>sh
$ jenv versions
* system (set by /Users/bxpeng/.jenv/version)
  1.6
  1.6.0.65
  oracle64-1.6.0.65
  1.7
  1.7.0.71
  oracle64-1.7.0.71
  1.8
  1.8.0.25
  oracle64-1.8.0.25
</code>
对于博主这种不是处女座的人来说，也觉得需要对版本再管理一下，使用<code>jenv remove</code>可以从jEnv中去掉不需要的Java版本：
<code>sh
$ jenv remove 1.6
JDK 1.6 removed
</code>
整理后，再运行<code>jenv versions</code>会显示：
<code>sh
$ jenv versions
* system (set by /Users/bxpeng/.jenv/version)
  1.6.0.65
  1.7.0.71
  1.8.0.25
</code>
选择一个Java版本，运行<code>jenv local</code>，例如：
<code>sh
$ jenv local 1.8.0.25
$ java -version
java version "1.8.0_25"
Java(TM) SE Runtime Environment (build 1.8.0_25-b17)
Java HotSpot(TM) 64-Bit Server VM (build 25.25-b02, mixed mode)
</code>
DangDangDangDang，我们已经成功地指定了某文件夹中local的Java版本。</p>

<p>你可以运行<code>jenv global</code>设置一个默认的Java版本，运行<code>jenv which java</code>显示可执行的Java的完整路径。</p>

<p>你也可以在特定的文件夹下使用.java-version文件来设定Java的版本。当我需要在Project中使用Java 6时，我仅仅需要把<code>1.6.0.65</code>作为内容保存在.java-version文件中，当我进入该文件夹时jEnv会自动地帮助我设定local的Java的版本。</p>

<p>没错，我们现在有了Java的多个版本，并且可以在它们之间轻松切换。更多的使用方法可以在<a href="http://www.jenv.be/">jEnv官网</a>的官网查询到。</p>

<p><strong>参考文献:</strong></p>

<ol>
<li><a href="http://www.jenv.be/">jEnv官网</a></li>
<li><a href="http://andrew-jones.com/blog/managing-multiple-versions-of-java-on-os-x/">Managing multiple versions of Java on OS X</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
